plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

base.archivesName = project.archives_base_name
version = "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/specialmodels.accesswidener")
}

repositories {
	mavenCentral()
	maven {
		url 'https://ladysnake.jfrog.io/artifactory/mods'
    }
	maven {
		url 'https://api.modrinth.com/maven'
		content {
			includeGroup "maven.modrinth"
		}
    }
	maven {
		url "https://jitpack.io"
	}
}

dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	modImplementation libs.quilt.loader
	modImplementation libs.quilted.fabric.api
//	modImplementation libs.modrinth.iris
//	modImplementation libs.modrinth.sodium
//	modImplementation libs.modrinth.indium
//
//	modImplementation libs.joml.joml
//	modImplementation libs.anarres.jcpp
//	modImplementation libs.douira.glsltransformer
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}
